// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = import.meta.env.VITE_SUPABASE_URL;
const SUPABASE_PUBLISHABLE_KEY = import.meta.env.VITE_SUPABASE_PUBLISHABLE_KEY;

if (!SUPABASE_URL) {
  throw new Error('VITE_SUPABASE_URL environment variable is required');
}

if (!SUPABASE_PUBLISHABLE_KEY) {
  throw new Error('VITE_SUPABASE_PUBLISHABLE_KEY environment variable is required');
}

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

// Ensure a single client instance across HMR to avoid multiple GoTrueClient warnings
const getSingletonClient = () => {
  const g = globalThis as unknown as { __supabaseClient?: ReturnType<typeof createClient<Database>> };
  if (!g.__supabaseClient) {
    g.__supabaseClient = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
      auth: {
        storage: localStorage,
        persistSession: true,
        autoRefreshToken: true,
        // Use a stable storage key to avoid collisions if multiple clients exist elsewhere
        storageKey: 'sb-auth',
      },
    });
  }
  return g.__supabaseClient;
};

export const supabase = getSingletonClient();